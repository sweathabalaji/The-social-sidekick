{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport notificationService from '../services/notifications';\nexport const useNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    // Subscribe to notification updates\n    const unsubscribe = notificationService.subscribe(updatedNotifications => {\n      setNotifications(updatedNotifications);\n      setUnreadCount(notificationService.getUnreadCount());\n    });\n\n    // Initialize notifications\n    setNotifications(notificationService.getNotifications());\n    setUnreadCount(notificationService.getUnreadCount());\n    return unsubscribe;\n  }, []);\n  const addNotification = (type, message) => {\n    return notificationService.addNotification(type, message);\n  };\n  const markAsRead = id => {\n    notificationService.markAsRead(id);\n  };\n  const markAllAsRead = () => {\n    notificationService.markAllAsRead();\n  };\n  return {\n    notifications,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead\n  };\n};\n_s(useNotifications, \"ZKbdJ33iEtJJ28qAyIajw14iMHg=\");","map":{"version":3,"names":["useState","useEffect","notificationService","useNotifications","_s","notifications","setNotifications","unreadCount","setUnreadCount","unsubscribe","subscribe","updatedNotifications","getUnreadCount","getNotifications","addNotification","type","message","markAsRead","id","markAllAsRead"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/hooks/useNotifications.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport notificationService from '../services/notifications';\n\nexport const useNotifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  useEffect(() => {\n    // Subscribe to notification updates\n    const unsubscribe = notificationService.subscribe((updatedNotifications) => {\n      setNotifications(updatedNotifications);\n      setUnreadCount(notificationService.getUnreadCount());\n    });\n\n    // Initialize notifications\n    setNotifications(notificationService.getNotifications());\n    setUnreadCount(notificationService.getUnreadCount());\n\n    return unsubscribe;\n  }, []);\n\n  const addNotification = (type, message) => {\n    return notificationService.addNotification(type, message);\n  };\n\n  const markAsRead = (id) => {\n    notificationService.markAsRead(id);\n  };\n\n  const markAllAsRead = () => {\n    notificationService.markAllAsRead();\n  };\n\n  return {\n    notifications,\n    unreadCount,\n    addNotification,\n    markAsRead,\n    markAllAsRead\n  };\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,mBAAmB,MAAM,2BAA2B;AAE3D,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,WAAW,GAAGP,mBAAmB,CAACQ,SAAS,CAAEC,oBAAoB,IAAK;MAC1EL,gBAAgB,CAACK,oBAAoB,CAAC;MACtCH,cAAc,CAACN,mBAAmB,CAACU,cAAc,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;;IAEF;IACAN,gBAAgB,CAACJ,mBAAmB,CAACW,gBAAgB,CAAC,CAAC,CAAC;IACxDL,cAAc,CAACN,mBAAmB,CAACU,cAAc,CAAC,CAAC,CAAC;IAEpD,OAAOH,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACzC,OAAOd,mBAAmB,CAACY,eAAe,CAACC,IAAI,EAAEC,OAAO,CAAC;EAC3D,CAAC;EAED,MAAMC,UAAU,GAAIC,EAAE,IAAK;IACzBhB,mBAAmB,CAACe,UAAU,CAACC,EAAE,CAAC;EACpC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BjB,mBAAmB,CAACiB,aAAa,CAAC,CAAC;EACrC,CAAC;EAED,OAAO;IACLd,aAAa;IACbE,WAAW;IACXO,eAAe;IACfG,UAAU;IACVE;EACF,CAAC;AACH,CAAC;AAACf,EAAA,CArCWD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}