{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add session ID\napi.interceptors.request.use(config => {\n  const sessionId = localStorage.getItem('sessionId');\n  if (sessionId) {\n    // Add session ID as a query parameter or header\n    config.params = {\n      ...config.params,\n      session_id: sessionId\n    };\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('sessionId');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: sessionId => api.post('/auth/logout', {}, {\n    params: {\n      session_id: sessionId\n    }\n  }),\n  verifySession: sessionId => api.get('/auth/verify', {\n    params: {\n      session_id: sessionId\n    }\n  })\n};\n\n// Posts API calls\nexport const postsAPI = {\n  createPost: postData => api.post('/posts', postData),\n  getPosts: params => api.get('/posts', {\n    params\n  }),\n  getPost: id => api.get(`/posts/${id}`),\n  updatePost: (id, postData) => api.put(`/posts/${id}`, postData),\n  deletePost: id => api.delete(`/posts/${id}`),\n  schedulePost: postData => api.post('/posts/schedule', postData),\n  getScheduledPosts: () => api.get('/posts/scheduled')\n};\n\n// Media API calls\nexport const mediaAPI = {\n  uploadMedia: formData => api.post('/media/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  generateCaption: mediaData => api.post('/media/caption', mediaData)\n};\n\n// Calendar API calls\nexport const calendarAPI = {\n  getCalendar: params => api.get('/calendar', {\n    params\n  }),\n  generateCalendar: calendarData => api.post('/calendar/generate', calendarData),\n  exportCalendar: params => api.get('/calendar/export', {\n    params\n  })\n};\n\n// Analytics API calls\nexport const analyticsAPI = {\n  getInstagramAnalytics: params => api.get('/analytics/instagram', {\n    params\n  }),\n  getFacebookAnalytics: params => api.get('/analytics/facebook', {\n    params\n  }),\n  getOverviewMetrics: () => api.get('/analytics/overview'),\n  getPostPerformance: postId => api.get(`/analytics/posts/${postId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","sessionId","localStorage","getItem","params","session_id","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","logout","verifySession","get","postsAPI","createPost","postData","getPosts","getPost","id","updatePost","put","deletePost","delete","schedulePost","getScheduledPosts","mediaAPI","uploadMedia","formData","generateCaption","mediaData","calendarAPI","getCalendar","generateCalendar","calendarData","exportCalendar","analyticsAPI","getInstagramAnalytics","getFacebookAnalytics","getOverviewMetrics","getPostPerformance","postId"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add session ID\napi.interceptors.request.use(\n  (config) => {\n    const sessionId = localStorage.getItem('sessionId');\n    if (sessionId) {\n      // Add session ID as a query parameter or header\n      config.params = {\n        ...config.params,\n        session_id: sessionId\n      };\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('sessionId');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  logout: (sessionId) => api.post('/auth/logout', {}, { params: { session_id: sessionId } }),\n  verifySession: (sessionId) => api.get('/auth/verify', { params: { session_id: sessionId } }),\n};\n\n// Posts API calls\nexport const postsAPI = {\n  createPost: (postData) => api.post('/posts', postData),\n  getPosts: (params) => api.get('/posts', { params }),\n  getPost: (id) => api.get(`/posts/${id}`),\n  updatePost: (id, postData) => api.put(`/posts/${id}`, postData),\n  deletePost: (id) => api.delete(`/posts/${id}`),\n  schedulePost: (postData) => api.post('/posts/schedule', postData),\n  getScheduledPosts: () => api.get('/posts/scheduled'),\n};\n\n// Media API calls\nexport const mediaAPI = {\n  uploadMedia: (formData) => api.post('/media/upload', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  generateCaption: (mediaData) => api.post('/media/caption', mediaData),\n};\n\n// Calendar API calls\nexport const calendarAPI = {\n  getCalendar: (params) => api.get('/calendar', { params }),\n  generateCalendar: (calendarData) => api.post('/calendar/generate', calendarData),\n  exportCalendar: (params) => api.get('/calendar/export', { params }),\n};\n\n// Analytics API calls\nexport const analyticsAPI = {\n  getInstagramAnalytics: (params) => api.get('/analytics/instagram', { params }),\n  getFacebookAnalytics: (params) => api.get('/analytics/facebook', { params }),\n  getOverviewMetrics: () => api.get('/analytics/overview'),\n  getPostPerformance: (postId) => api.get(`/analytics/posts/${postId}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}