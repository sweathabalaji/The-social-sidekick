{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/pages/ContentCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ContentCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentCalendar = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [numDays, setNumDays] = useState(14);\n  const [foodStyle, setFoodStyle] = useState(['Both']);\n  const [promotionFocus, setPromotionFocus] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [generatedCalendar, setGeneratedCalendar] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [viewMode, setViewMode] = useState('grid');\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const foodStyles = ['South Indian', 'North Indian', 'Both'];\n  const currentYear = new Date().getFullYear();\n  const years = [currentYear, currentYear + 1, currentYear + 2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-calendar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDDD3\\uFE0F AI Content Calendar Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generate a customized content calendar for your food delivery service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentCalendar, \"W24eqGE9EJP4I4sr/WwvfivgBDE=\");\n_c = ContentCalendar;\nexport default ContentCalendar;\n\n// Pre-defined calendar templates\nconst calendarTemplates = [{\n  id: 'festive_season',\n  name: 'üéâ Festive Season Special',\n  description: 'Focus on traditional festivals and seasonal celebrations',\n  promotion_focus: 'festive specials, traditional sweets, family meals, celebration combos',\n  food_style: ['Both'],\n  num_days: 15\n}, {\n  id: 'health_wellness',\n  name: 'ü•ó Health & Wellness Focus',\n  description: 'Emphasize nutritious and healthy food options',\n  promotion_focus: 'healthy options, nutritious meals, balanced diet, organic ingredients',\n  food_style: ['South Indian'],\n  num_days: 14\n}, {\n  id: 'summer_special',\n  name: '‚òÄÔ∏è Summer Specials',\n  description: 'Light, refreshing meals perfect for summer',\n  promotion_focus: 'summer specials, cool beverages, light meals, refreshing dishes',\n  food_style: ['Both'],\n  num_days: 21\n}, {\n  id: 'student_budget',\n  name: 'üéì Student Budget Meals',\n  description: 'Affordable, filling meals for students',\n  promotion_focus: 'budget meals, student offers, quick delivery, value combos',\n  food_style: ['North Indian'],\n  num_days: 10\n}, {\n  id: 'weekend_indulgence',\n  name: 'üçΩÔ∏è Weekend Indulgence',\n  description: 'Rich, elaborate meals for weekend treats',\n  promotion_focus: 'weekend specials, family platters, premium dishes, indulgent treats',\n  food_style: ['Both'],\n  num_days: 8\n}];\n\n// Clear messages after 5 seconds\nuseEffect(() => {\n  if (successMessage) {\n    const timer = setTimeout(() => setSuccessMessage(''), 5000);\n    return () => clearTimeout(timer);\n  }\n}, [successMessage]);\nuseEffect(() => {\n  if (error) {\n    const timer = setTimeout(() => setError(''), 7000);\n    return () => clearTimeout(timer);\n  }\n}, [error]);\nconst handleFoodStyleChange = style => {\n  setFoodStyle(prev => {\n    if (prev.includes(style)) {\n      return prev.filter(s => s !== style);\n    } else {\n      return [...prev, style];\n    }\n  });\n};\nconst handleTemplateSelect = template => {\n  setSelectedTemplate(template.id);\n  setPromotionFocus(template.promotion_focus);\n  setFoodStyle(template.food_style);\n  setNumDays(template.num_days);\n};\nconst generateCalendar = async () => {\n  if (foodStyle.length === 0) {\n    setError('Please select at least one food style');\n    return;\n  }\n  setIsLoading(true);\n  setError('');\n  setSuccessMessage('');\n  try {\n    const response = await fetch('/api/generate-calendar', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        month: selectedMonth,\n        year: selectedYear,\n        num_days: numDays,\n        food_style: foodStyle,\n        promotion_focus: promotionFocus\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Failed to generate calendar');\n    }\n    const data = await response.json();\n    setGeneratedCalendar(data.calendar);\n    setSuccessMessage(`‚úÖ Successfully generated ${data.calendar.length} days of content!`);\n  } catch (err) {\n    setError('Error generating content calendar: ' + err.message);\n  } finally {\n    setIsLoading(false);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ContentCalendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContentCalendar","_s","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","numDays","setNumDays","foodStyle","setFoodStyle","promotionFocus","setPromotionFocus","selectedTemplate","setSelectedTemplate","generatedCalendar","setGeneratedCalendar","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","viewMode","setViewMode","months","foodStyles","currentYear","years","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","calendarTemplates","id","name","description","promotion_focus","food_style","num_days","timer","setTimeout","clearTimeout","handleFoodStyleChange","style","prev","includes","filter","s","handleTemplateSelect","template","generateCalendar","length","response","fetch","method","headers","body","JSON","stringify","month","year","ok","errorData","json","Error","detail","data","calendar","err","message","$RefreshReg$"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/pages/ContentCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ContentCalendar.css';\n\nconst ContentCalendar = () => {\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [numDays, setNumDays] = useState(14);\n  const [foodStyle, setFoodStyle] = useState(['Both']);\n  const [promotionFocus, setPromotionFocus] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [generatedCalendar, setGeneratedCalendar] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [viewMode, setViewMode] = useState('grid');\n\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  const foodStyles = ['South Indian', 'North Indian', 'Both'];\n  const currentYear = new Date().getFullYear();\n  const years = [currentYear, currentYear + 1, currentYear + 2];\n\n  return (\n    <div className=\"content-calendar\">\n      <div className=\"calendar-header\">\n        <h1>üóìÔ∏è AI Content Calendar Generator</h1>\n        <p>Generate a customized content calendar for your food delivery service</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCalendar;\n\n  // Pre-defined calendar templates\n  const calendarTemplates = [\n    {\n      id: 'festive_season',\n      name: 'üéâ Festive Season Special',\n      description: 'Focus on traditional festivals and seasonal celebrations',\n      promotion_focus: 'festive specials, traditional sweets, family meals, celebration combos',\n      food_style: ['Both'],\n      num_days: 15\n    },\n    {\n      id: 'health_wellness',\n      name: 'ü•ó Health & Wellness Focus',\n      description: 'Emphasize nutritious and healthy food options',\n      promotion_focus: 'healthy options, nutritious meals, balanced diet, organic ingredients',\n      food_style: ['South Indian'],\n      num_days: 14\n    },\n    {\n      id: 'summer_special',\n      name: '‚òÄÔ∏è Summer Specials',\n      description: 'Light, refreshing meals perfect for summer',\n      promotion_focus: 'summer specials, cool beverages, light meals, refreshing dishes',\n      food_style: ['Both'],\n      num_days: 21\n    },\n    {\n      id: 'student_budget',\n      name: 'üéì Student Budget Meals',\n      description: 'Affordable, filling meals for students',\n      promotion_focus: 'budget meals, student offers, quick delivery, value combos',\n      food_style: ['North Indian'],\n      num_days: 10\n    },\n    {\n      id: 'weekend_indulgence',\n      name: 'üçΩÔ∏è Weekend Indulgence',\n      description: 'Rich, elaborate meals for weekend treats',\n      promotion_focus: 'weekend specials, family platters, premium dishes, indulgent treats',\n      food_style: ['Both'],\n      num_days: 8\n    }\n  ];\n\n  // Clear messages after 5 seconds\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(''), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => setError(''), 7000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  const handleFoodStyleChange = (style) => {\n    setFoodStyle(prev => {\n      if (prev.includes(style)) {\n        return prev.filter(s => s !== style);\n      } else {\n        return [...prev, style];\n      }\n    });\n  };\n\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template.id);\n    setPromotionFocus(template.promotion_focus);\n    setFoodStyle(template.food_style);\n    setNumDays(template.num_days);\n  };\n\n  const generateCalendar = async () => {\n    if (foodStyle.length === 0) {\n      setError('Please select at least one food style');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const response = await fetch('/api/generate-calendar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          month: selectedMonth,\n          year: selectedYear,\n          num_days: numDays,\n          food_style: foodStyle,\n          promotion_focus: promotionFocus,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to generate calendar');\n      }\n\n      const data = await response.json();\n      setGeneratedCalendar(data.calendar);\n      setSuccessMessage(`‚úÖ Successfully generated ${data.calendar.length} days of content!`);\n    } catch (err) {\n      setError('Error generating content calendar: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,MAAM,CAAC;EAEhD,MAAM+B,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;EAED,MAAMC,UAAU,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,MAAM,CAAC;EAC3D,MAAMC,WAAW,GAAG,IAAIzB,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;EAC5C,MAAMsB,KAAK,GAAG,CAACD,WAAW,EAAEA,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAG,CAAC,CAAC;EAE7D,oBACE9B,OAAA;IAAKgC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BjC,OAAA;MAAKgC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjC,OAAA;QAAAiC,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CrC,OAAA;QAAAiC,QAAA,EAAG;MAAqE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9BID,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAgCrB,eAAeA,eAAe;;AAE5B;AACA,MAAMsC,iBAAiB,GAAG,CACxB;EACEC,EAAE,EAAE,gBAAgB;EACpBC,IAAI,EAAE,2BAA2B;EACjCC,WAAW,EAAE,0DAA0D;EACvEC,eAAe,EAAE,wEAAwE;EACzFC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,iBAAiB;EACrBC,IAAI,EAAE,4BAA4B;EAClCC,WAAW,EAAE,+CAA+C;EAC5DC,eAAe,EAAE,uEAAuE;EACxFC,UAAU,EAAE,CAAC,cAAc,CAAC;EAC5BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,gBAAgB;EACpBC,IAAI,EAAE,oBAAoB;EAC1BC,WAAW,EAAE,4CAA4C;EACzDC,eAAe,EAAE,iEAAiE;EAClFC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,gBAAgB;EACpBC,IAAI,EAAE,yBAAyB;EAC/BC,WAAW,EAAE,wCAAwC;EACrDC,eAAe,EAAE,4DAA4D;EAC7EC,UAAU,EAAE,CAAC,cAAc,CAAC;EAC5BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,oBAAoB;EACxBC,IAAI,EAAE,wBAAwB;EAC9BC,WAAW,EAAE,0CAA0C;EACvDC,eAAe,EAAE,qEAAqE;EACtFC,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,QAAQ,EAAE;AACZ,CAAC,CACF;;AAED;AACA/C,SAAS,CAAC,MAAM;EACd,IAAI0B,cAAc,EAAE;IAClB,MAAMsB,KAAK,GAAGC,UAAU,CAAC,MAAMtB,iBAAiB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC3D,OAAO,MAAMuB,YAAY,CAACF,KAAK,CAAC;EAClC;AACF,CAAC,EAAE,CAACtB,cAAc,CAAC,CAAC;AAEpB1B,SAAS,CAAC,MAAM;EACd,IAAIwB,KAAK,EAAE;IACT,MAAMwB,KAAK,GAAGC,UAAU,CAAC,MAAMxB,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAClD,OAAO,MAAMyB,YAAY,CAACF,KAAK,CAAC;EAClC;AACF,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;AAEX,MAAM2B,qBAAqB,GAAIC,KAAK,IAAK;EACvCrC,YAAY,CAACsC,IAAI,IAAI;IACnB,IAAIA,IAAI,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;MACxB,OAAOC,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,KAAK,CAAC;IACtC,CAAC,MAAM;MACL,OAAO,CAAC,GAAGC,IAAI,EAAED,KAAK,CAAC;IACzB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMK,oBAAoB,GAAIC,QAAQ,IAAK;EACzCvC,mBAAmB,CAACuC,QAAQ,CAAChB,EAAE,CAAC;EAChCzB,iBAAiB,CAACyC,QAAQ,CAACb,eAAe,CAAC;EAC3C9B,YAAY,CAAC2C,QAAQ,CAACZ,UAAU,CAAC;EACjCjC,UAAU,CAAC6C,QAAQ,CAACX,QAAQ,CAAC;AAC/B,CAAC;AAED,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI7C,SAAS,CAAC8C,MAAM,KAAK,CAAC,EAAE;IAC1BnC,QAAQ,CAAC,uCAAuC,CAAC;IACjD;EACF;EAEAF,YAAY,CAAC,IAAI,CAAC;EAClBE,QAAQ,CAAC,EAAE,CAAC;EACZE,iBAAiB,CAAC,EAAE,CAAC;EAErB,IAAI;IACF,MAAMkC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE/D,aAAa;QACpBgE,IAAI,EAAE5D,YAAY;QAClBsC,QAAQ,EAAEnC,OAAO;QACjBkC,UAAU,EAAEhC,SAAS;QACrB+B,eAAe,EAAE7B;MACnB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAAC6C,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,MAAM,IAAI,6BAA6B,CAAC;IACpE;IAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCnD,oBAAoB,CAACsD,IAAI,CAACC,QAAQ,CAAC;IACnCjD,iBAAiB,CAAC,4BAA4BgD,IAAI,CAACC,QAAQ,CAAChB,MAAM,mBAAmB,CAAC;EACxF,CAAC,CAAC,OAAOiB,GAAG,EAAE;IACZpD,QAAQ,CAAC,qCAAqC,GAAGoD,GAAG,CAACC,OAAO,CAAC;EAC/D,CAAC,SAAS;IACRvD,YAAY,CAAC,KAAK,CAAC;EACrB;AACF,CAAC;AAAC,IAAAiB,EAAA;AAAAuC,YAAA,CAAAvC,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}