{"ast":null,"code":"import { authAPI } from './api/';\nclass AuthService {\n  constructor() {\n    this.token = localStorage.getItem('authToken');\n    this.user = JSON.parse(localStorage.getItem('user') || 'null');\n  }\n  async login(email, password) {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      this.setSession(token, user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  }\n  async register(userData) {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      this.setSession(token, user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  }\n  logout() {\n    this.clearSession();\n    window.location.href = '/login';\n  }\n  setSession(token, user) {\n    this.token = token;\n    this.user = user;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  clearSession() {\n    this.token = null;\n    this.user = null;\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n  }\n  isAuthenticated() {\n    return !!this.token;\n  }\n  getToken() {\n    return this.token;\n  }\n  getUser() {\n    return this.user;\n  }\n  async verifyToken() {\n    if (!this.token) return false;\n    try {\n      await authAPI.verifyToken();\n      return true;\n    } catch (error) {\n      this.clearSession();\n      return false;\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["authAPI","AuthService","constructor","token","localStorage","getItem","user","JSON","parse","login","email","password","response","data","setSession","success","error","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","clearSession","window","location","href","setItem","stringify","removeItem","isAuthenticated","getToken","getUser","verifyToken"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/services/auth.js"],"sourcesContent":["import { authAPI } from './api/';\n\nclass AuthService {\n  constructor() {\n    this.token = localStorage.getItem('authToken');\n    this.user = JSON.parse(localStorage.getItem('user') || 'null');\n  }\n\n  async login(email, password) {\n    try {\n      const response = await authAPI.login({ email, password });\n      const { token, user } = response.data;\n      \n      this.setSession(token, user);\n      return { success: true, user };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Login failed' \n      };\n    }\n  }\n\n  async register(userData) {\n    try {\n      const response = await authAPI.register(userData);\n      const { token, user } = response.data;\n      \n      this.setSession(token, user);\n      return { success: true, user };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  }\n\n  logout() {\n    this.clearSession();\n    window.location.href = '/login';\n  }\n\n  setSession(token, user) {\n    this.token = token;\n    this.user = user;\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  clearSession() {\n    this.token = null;\n    this.user = null;\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n  }\n\n  isAuthenticated() {\n    return !!this.token;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  async verifyToken() {\n    if (!this.token) return false;\n    \n    try {\n      await authAPI.verifyToken();\n      return true;\n    } catch (error) {\n      this.clearSession();\n      return false;\n    }\n  }\n}\n\nexport default new AuthService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}