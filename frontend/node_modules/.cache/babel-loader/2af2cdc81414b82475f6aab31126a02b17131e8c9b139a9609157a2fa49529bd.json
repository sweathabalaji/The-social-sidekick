{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/pages/ContentCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst ContentCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Mock data for calendar events\n    const mockEvents = [{\n      id: 1,\n      title: 'Instagram Post',\n      start: new Date(2024, 0, 15, 10, 0),\n      end: new Date(2024, 0, 15, 11, 0),\n      resource: 'instagram'\n    }, {\n      id: 2,\n      title: 'Facebook Post',\n      start: new Date(2024, 0, 20, 14, 0),\n      end: new Date(2024, 0, 20, 15, 0),\n      resource: 'facebook'\n    }];\n    setEvents(mockEvents);\n  }, []);\n  const eventStyleGetter = event => {\n    let backgroundColor = '#3174ad';\n    if (event.resource === 'instagram') {\n      backgroundColor = '#E4405F';\n    } else if (event.resource === 'facebook') {\n      backgroundColor = '#1877F2';\n    }\n    return {\n      style: {\n        backgroundColor,\n        borderRadius: '5px',\n        opacity: 0.8,\n        color: 'white',\n        border: '0px',\n        display: 'block'\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Content Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"View and manage your scheduled posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      style: {\n        height: '600px',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        eventPropGetter: eventStyleGetter,\n        views: ['month', 'week', 'day'],\n        defaultView: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = ContentCalendar;\nexport default ContentCalendar;\nvar _c;\n$RefreshReg$(_c, \"ContentCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","ContentCalendar","_s","events","setEvents","mockEvents","id","title","start","Date","end","resource","eventStyleGetter","event","backgroundColor","style","borderRadius","opacity","color","border","display","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","margin","startAccessor","endAccessor","eventPropGetter","views","defaultView","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/pages/ContentCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nconst ContentCalendar = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    // Mock data for calendar events\n    const mockEvents = [\n      {\n        id: 1,\n        title: 'Instagram Post',\n        start: new Date(2024, 0, 15, 10, 0),\n        end: new Date(2024, 0, 15, 11, 0),\n        resource: 'instagram'\n      },\n      {\n        id: 2,\n        title: 'Facebook Post',\n        start: new Date(2024, 0, 20, 14, 0),\n        end: new Date(2024, 0, 20, 15, 0),\n        resource: 'facebook'\n      }\n    ];\n    setEvents(mockEvents);\n  }, []);\n\n  const eventStyleGetter = (event) => {\n    let backgroundColor = '#3174ad';\n    if (event.resource === 'instagram') {\n      backgroundColor = '#E4405F';\n    } else if (event.resource === 'facebook') {\n      backgroundColor = '#1877F2';\n    }\n\n    return {\n      style: {\n        backgroundColor,\n        borderRadius: '5px',\n        opacity: 0.8,\n        color: 'white',\n        border: '0px',\n        display: 'block'\n      }\n    };\n  };\n\n  return (\n    <div className=\"content-calendar\">\n      <div className=\"page-header\">\n        <h1>Content Calendar</h1>\n        <p>View and manage your scheduled posts</p>\n      </div>\n\n      <div className=\"calendar-container\" style={{ height: '600px', margin: '20px 0' }}>\n        <Calendar\n          localizer={localizer}\n          events={events}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          eventPropGetter={eventStyleGetter}\n          views={['month', 'week', 'day']}\n          defaultView=\"month\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}