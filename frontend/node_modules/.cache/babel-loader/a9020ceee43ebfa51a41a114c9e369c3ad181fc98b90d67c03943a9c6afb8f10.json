{"ast":null,"code":"import _objectSpread from\"/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import authService from'./auth';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Create axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor to add session ID\napiClient.interceptors.request.use(config=>{const sessionId=authService.getSessionId();if(sessionId){// Add session_id as query parameter for all requests\nconfig.params=_objectSpread(_objectSpread({},config.params),{},{session_id:sessionId});}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle authentication errors\napiClient.interceptors.response.use(response=>{return response;},error=>{if(error.response){var _error$response$data;const status=error.response.status;const detail=(_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail;if(status===401){// Session expired or invalid\nif(detail&&detail.includes('session')){authService.clearSession();// Redirect to login if not already there\nif(window.location.pathname!=='/login'){window.location.href='/login';}}}else if(status===500){console.error('Server error:',detail);}}else if(error.request){console.error('Network error:',error.message);}else{console.error('Request error:',error.message);}return Promise.reject(error);});// API functions\nexport const authAPI={login:credentials=>apiClient.post('/auth/login',credentials),register:userData=>apiClient.post('/auth/register',userData),verifySession:sessionId=>apiClient.get('/auth/verify',{params:{session_id:sessionId}}),logout:sessionId=>apiClient.post('/auth/logout',{},{params:{session_id:sessionId}})};export const dashboardAPI={getDashboardData:()=>apiClient.get('/api/dashboard'),getScheduledPosts:()=>apiClient.get('/api/scheduled-posts'),getAIContent:()=>apiClient.get('/api/ai-content')};export const analyticsAPI={getAnalytics:function(){let platform=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'30d';return apiClient.get('/api/analytics',{params:{platform,period}});},getEngagement:function(){let platform=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'30d';return apiClient.get('/api/analytics/engagement',{params:{platform,period}});},getReach:function(){let platform=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';let period=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'30d';return apiClient.get('/api/analytics/reach',{params:{platform,period}});},getSummary:function(){let period=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'30d';return apiClient.get('/api/analytics/summary',{params:{period}});}};export const postsAPI={getPosts:()=>apiClient.get('/api/posts'),createPost:postData=>apiClient.post('/api/posts',postData),updatePost:(postId,postData)=>apiClient.put(\"/api/posts/\".concat(postId),postData),deletePost:postId=>apiClient.delete(\"/api/posts/\".concat(postId)),getPostHistory:postId=>apiClient.get(\"/api/posts/\".concat(postId,\"/history\"))};export default apiClient;","map":{"version":3,"names":["axios","authService","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","sessionId","getSessionId","params","_objectSpread","session_id","error","Promise","reject","response","_error$response$data","status","detail","data","includes","clearSession","window","location","pathname","href","console","message","authAPI","login","credentials","post","register","userData","verifySession","get","logout","dashboardAPI","getDashboardData","getScheduledPosts","getAIContent","analyticsAPI","getAnalytics","platform","arguments","length","undefined","period","getEngagement","getReach","getSummary","postsAPI","getPosts","createPost","postData","updatePost","postId","put","concat","deletePost","delete","getPostHistory"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport authService from './auth';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create axios instance\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Request interceptor to add session ID\napiClient.interceptors.request.use(\n  (config) => {\n    const sessionId = authService.getSessionId();\n    if (sessionId) {\n      // Add session_id as query parameter for all requests\n      config.params = {\n        ...config.params,\n        session_id: sessionId\n      };\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle authentication errors\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response) {\n      const status = error.response.status;\n      const detail = error.response.data?.detail;\n      \n      if (status === 401) {\n        // Session expired or invalid\n        if (detail && detail.includes('session')) {\n          authService.clearSession();\n          // Redirect to login if not already there\n          if (window.location.pathname !== '/login') {\n            window.location.href = '/login';\n          }\n        }\n      } else if (status === 500) {\n        console.error('Server error:', detail);\n      }\n    } else if (error.request) {\n      console.error('Network error:', error.message);\n    } else {\n      console.error('Request error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API functions\nexport const authAPI = {\n  login: (credentials) => \n    apiClient.post('/auth/login', credentials),\n  \n  register: (userData) => \n    apiClient.post('/auth/register', userData),\n  \n  verifySession: (sessionId) => \n    apiClient.get('/auth/verify', { params: { session_id: sessionId } }),\n  \n  logout: (sessionId) => \n    apiClient.post('/auth/logout', {}, { params: { session_id: sessionId } })\n};\n\nexport const dashboardAPI = {\n  getDashboardData: () => \n    apiClient.get('/api/dashboard'),\n  \n  getScheduledPosts: () => \n    apiClient.get('/api/scheduled-posts'),\n  \n  getAIContent: () => \n    apiClient.get('/api/ai-content')\n};\n\nexport const analyticsAPI = {\n  getAnalytics: (platform = 'all', period = '30d') => \n    apiClient.get('/api/analytics', { params: { platform, period } }),\n  \n  getEngagement: (platform = 'all', period = '30d') => \n    apiClient.get('/api/analytics/engagement', { params: { platform, period } }),\n  \n  getReach: (platform = 'all', period = '30d') => \n    apiClient.get('/api/analytics/reach', { params: { platform, period } }),\n  \n  getSummary: (period = '30d') => \n    apiClient.get('/api/analytics/summary', { params: { period } })\n};\n\nexport const postsAPI = {\n  getPosts: () => \n    apiClient.get('/api/posts'),\n  \n  createPost: (postData) => \n    apiClient.post('/api/posts', postData),\n  \n  updatePost: (postId, postData) => \n    apiClient.put(`/api/posts/${postId}`, postData),\n  \n  deletePost: (postId) => \n    apiClient.delete(`/api/posts/${postId}`),\n  \n  getPostHistory: (postId) => \n    apiClient.get(`/api/posts/${postId}/history`)\n};\n\nexport default apiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}