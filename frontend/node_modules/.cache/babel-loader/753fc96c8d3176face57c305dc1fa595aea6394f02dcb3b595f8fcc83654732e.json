{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/hooks/useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport authService from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(authService.getUser());\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n  const [loading, setLoading] = useState(true);\n  const [sessionError, setSessionError] = useState('');\n  useEffect(() => {\n    const verifySession = async () => {\n      if (authService.isAuthenticated()) {\n        try {\n          const isValid = await authService.verifySession();\n          if (isValid) {\n            setUser(authService.getUser());\n            setIsAuthenticated(true);\n            setSessionError('');\n          } else {\n            // Session expired or invalid\n            setUser(null);\n            setIsAuthenticated(false);\n            setSessionError('Your session has expired. Please log in again.');\n            authService.clearSession();\n          }\n        } catch (error) {\n          console.error('Session verification failed:', error);\n          setUser(null);\n          setIsAuthenticated(false);\n          setSessionError('Session verification failed. Please log in again.');\n          authService.clearSession();\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n      setLoading(false);\n    };\n    verifySession();\n\n    // Set up periodic session check (every 5 minutes)\n    const interval = setInterval(verifySession, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const result = await authService.login(email, password);\n      if (result.success) {\n        setUser(result.user);\n        setIsAuthenticated(true);\n        setSessionError('');\n      }\n      return result;\n    } catch (error) {\n      console.error('Login error in useAuth:', error);\n      return {\n        success: false,\n        error: 'An unexpected error occurred during login.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const result = await authService.register(userData);\n      if (result.success) {\n        setUser(result.user);\n        setIsAuthenticated(true);\n        setSessionError('');\n      }\n      return result;\n    } catch (error) {\n      console.error('Registration error in useAuth:', error);\n      return {\n        success: false,\n        error: 'An unexpected error occurred during registration.'\n      };\n    }\n  };\n  const logout = () => {\n    try {\n      authService.logout();\n      setUser(null);\n      setIsAuthenticated(false);\n      setSessionError('');\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still log out locally even if API call fails\n      setUser(null);\n      setIsAuthenticated(false);\n      authService.clearSession();\n    }\n  };\n  const clearSessionError = () => {\n    setSessionError('');\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    sessionError,\n    login,\n    register,\n    logout,\n    clearSessionError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iux1RAGk21i4WGOjmyGwi0rGnWg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","getUser","isAuthenticated","setIsAuthenticated","loading","setLoading","sessionError","setSessionError","verifySession","isValid","clearSession","error","console","interval","setInterval","clearInterval","login","email","password","result","success","register","userData","logout","clearSessionError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport authService from '../services/auth';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(authService.getUser());\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n  const [loading, setLoading] = useState(true);\n  const [sessionError, setSessionError] = useState('');\n\n  useEffect(() => {\n    const verifySession = async () => {\n      if (authService.isAuthenticated()) {\n        try {\n          const isValid = await authService.verifySession();\n          if (isValid) {\n            setUser(authService.getUser());\n            setIsAuthenticated(true);\n            setSessionError('');\n          } else {\n            // Session expired or invalid\n            setUser(null);\n            setIsAuthenticated(false);\n            setSessionError('Your session has expired. Please log in again.');\n            authService.clearSession();\n          }\n        } catch (error) {\n          console.error('Session verification failed:', error);\n          setUser(null);\n          setIsAuthenticated(false);\n          setSessionError('Session verification failed. Please log in again.');\n          authService.clearSession();\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n      setLoading(false);\n    };\n\n    verifySession();\n\n    // Set up periodic session check (every 5 minutes)\n    const interval = setInterval(verifySession, 5 * 60 * 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const result = await authService.login(email, password);\n      if (result.success) {\n        setUser(result.user);\n        setIsAuthenticated(true);\n        setSessionError('');\n      }\n      return result;\n    } catch (error) {\n      console.error('Login error in useAuth:', error);\n      return { \n        success: false, \n        error: 'An unexpected error occurred during login.' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const result = await authService.register(userData);\n      if (result.success) {\n        setUser(result.user);\n        setIsAuthenticated(true);\n        setSessionError('');\n      }\n      return result;\n    } catch (error) {\n      console.error('Registration error in useAuth:', error);\n      return { \n        success: false, \n        error: 'An unexpected error occurred during registration.' \n      };\n    }\n  };\n\n  const logout = () => {\n    try {\n      authService.logout();\n      setUser(null);\n      setIsAuthenticated(false);\n      setSessionError('');\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still log out locally even if API call fails\n      setUser(null);\n      setIsAuthenticated(false);\n      authService.clearSession();\n    }\n  };\n\n  const clearSessionError = () => {\n    setSessionError('');\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    sessionError,\n    login,\n    register,\n    logout,\n    clearSessionError\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}