{"ast":null,"code":"import { authAPI } from './api/';\nclass AuthService {\n  constructor() {\n    this.sessionId = localStorage.getItem('sessionId');\n    this.user = JSON.parse(localStorage.getItem('user') || 'null');\n  }\n  async login(email, password) {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        session_id,\n        user\n      } = response.data;\n      this.setSession(session_id, user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  }\n  async register(userData) {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        session_id,\n        user\n      } = response.data;\n      this.setSession(session_id, user);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed'\n      };\n    }\n  }\n  logout() {\n    if (this.sessionId) {\n      // Call logout API to remove session from database\n      authAPI.logout(this.sessionId).catch(err => {\n        console.error('Logout API error:', err);\n      });\n    }\n    this.clearSession();\n    window.location.href = '/login';\n  }\n  setSession(sessionId, user) {\n    this.sessionId = sessionId;\n    this.user = user;\n    localStorage.setItem('sessionId', sessionId);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  clearSession() {\n    this.sessionId = null;\n    this.user = null;\n    localStorage.removeItem('sessionId');\n    localStorage.removeItem('user');\n  }\n  isAuthenticated() {\n    return !!this.sessionId;\n  }\n  getSessionId() {\n    return this.sessionId;\n  }\n  getUser() {\n    return this.user;\n  }\n  async verifySession() {\n    if (!this.sessionId) return false;\n    try {\n      const response = await authAPI.verifySession(this.sessionId);\n      if (response.data.success) {\n        // Update user data if needed\n        this.user = response.data.user;\n        localStorage.setItem('user', JSON.stringify(this.user));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      this.clearSession();\n      return false;\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["authAPI","AuthService","constructor","sessionId","localStorage","getItem","user","JSON","parse","login","email","password","response","session_id","data","setSession","success","error","_error$response","_error$response$data","detail","register","userData","_error$response2","_error$response2$data","logout","catch","err","console","clearSession","window","location","href","setItem","stringify","removeItem","isAuthenticated","getSessionId","getUser","verifySession"],"sources":["/Users/apple/Desktop/HOGIST PROJECT/Social_media_automation_final_igfb/frontend/src/services/auth.js"],"sourcesContent":["import { authAPI } from './api/';\n\nclass AuthService {\n  constructor() {\n    this.sessionId = localStorage.getItem('sessionId');\n    this.user = JSON.parse(localStorage.getItem('user') || 'null');\n  }\n\n  async login(email, password) {\n    try {\n      const response = await authAPI.login({ email, password });\n      const { session_id, user } = response.data;\n      \n      this.setSession(session_id, user);\n      return { success: true, user };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Login failed' \n      };\n    }\n  }\n\n  async register(userData) {\n    try {\n      const response = await authAPI.register(userData);\n      const { session_id, user } = response.data;\n      \n      this.setSession(session_id, user);\n      return { success: true, user };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Registration failed' \n      };\n    }\n  }\n\n  logout() {\n    if (this.sessionId) {\n      // Call logout API to remove session from database\n      authAPI.logout(this.sessionId).catch(err => {\n        console.error('Logout API error:', err);\n      });\n    }\n    this.clearSession();\n    window.location.href = '/login';\n  }\n\n  setSession(sessionId, user) {\n    this.sessionId = sessionId;\n    this.user = user;\n    localStorage.setItem('sessionId', sessionId);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  clearSession() {\n    this.sessionId = null;\n    this.user = null;\n    localStorage.removeItem('sessionId');\n    localStorage.removeItem('user');\n  }\n\n  isAuthenticated() {\n    return !!this.sessionId;\n  }\n\n  getSessionId() {\n    return this.sessionId;\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  async verifySession() {\n    if (!this.sessionId) return false;\n    \n    try {\n      const response = await authAPI.verifySession(this.sessionId);\n      if (response.data.success) {\n        // Update user data if needed\n        this.user = response.data.user;\n        localStorage.setItem('user', JSON.stringify(this.user));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      this.clearSession();\n      return false;\n    }\n  }\n}\n\nexport default new AuthService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}